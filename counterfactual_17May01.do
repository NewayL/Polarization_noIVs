
* This do file follows "counterfactual_17Apr27.do", but use a different method to 
* compute the counterfactrual
*
* In previous versions, change in log is used as a percentage change
* in this do file, use change in log directly to get the counterfactual shares

set more off
cap cd "C:/PhD Study/Year 3/Projects/Job Porlarization/Arranged Files"
cap cd "/Users/yawenliang/Dropbox/My_Work/polarization/"

clear

*use "data/temp/ctf_17Jul02.dta", clear /* generated by "counterfactual_17Jun02.do", OLS or CF results */
*use "data/temp/ctf_17Jun12.dta", clear /* generated by "counterfactual_17Jun12.do", OLS or CF results */
*use "data/temp/ctf_17May31.dta",clear /* generated by "counterfactual_17May31.do", IV results */
*use "data/temp/ctf_17May24.dta",clear /* generated by "counterfactual_17May24.do", OLS or CF results */
*use "data/temp/ctf_17Apr27.dta",clear /* generated by "counterfactual_17Apr27.do", OLS or CF results */
*use "data/temp/ctf_17Mar7.dta",clear /* generated by "counterfactual_17Mar7.do", IV results */
use "data/temp/ctf_17Sep11.dta",clear /* generated by "counterfactual_17Sep11.do", OLS or CF results */

*use "data/temp/ctf_17Oct07.dta",clear /* generated by "counterfactual_17Oct07.do", OLS or CF results */


drop if dlnY1==.
drop if dlnY2==.
drop if dlnY1_ctf==.
drop if dlnY2_ctf==.


* compute the predictions using fitted values

foreach Y in Y1 Y2{
gen lnL`Y' = ln(L`Y')
gen ln`Y'_ctf = lnL`Y'+dln`Y'_ctf
gen `Y'_ctf = exp(ln`Y'_ctf)
}


* L for "lagged"

gen mocc_shr = Y1/(Y1+Y2+Y1*Y2)
gen rocc_shr = (Y1*Y2)/(Y1+Y2+Y1*Y2)
gen cocc_shr = Y2/(Y1+Y2+Y1*Y2)

gen Lmocc_shr = LY1/(LY1+LY2+LY1*LY2)
gen Lrocc_shr = (LY1*LY2)/(LY1+LY2+LY1*LY2)
gen Lcocc_shr = LY2/(LY1+LY2+LY1*LY2)
 
foreach task in m r c{
gen d`task'occ_shr  = `task'occ_shr-L`task'occ_shr
}

* compute the docc_shr caused by trade
foreach item in ctf{
gen mocc_shr_`item' = Y1_`item'/(Y1_`item'+Y2_`item'+Y1_`item'*Y2_`item')
gen rocc_shr_`item' = (Y1_`item'*Y2_`item')/(Y1_`item'+Y2_`item'+Y1_`item'*Y2_`item')
gen cocc_shr_`item' = Y2_`item'/(Y1_`item'+Y2_`item'+Y1_`item'*Y2_`item')
}


foreach task in m r c{
gen d`task'occ_shr_ctf = `task'occ_shr_ctf-L`task'occ_shr
gen d`task'occ_shr_trade = d`task'occ_shr-d`task'occ_shr_ctf /* total - no trade */
}
gen n = 1

collapse (mean) d*occ_shr d*occ_shr_ctf d*occ_shr_trade (sum) n [aweight=L_kabgrp], by(year)


* GRAPH
********************************************************************************************
gen period = year
label define periodl 1 "1990-1996" 2 "2002-2006" 3 "1990-2006"
label values period periodl

* aggregated

graph bar dmocc_shr_trade drocc_shr_trade dcocc_shr_trade, over(period,label(labsize(small))) legend (label(1 "Manual Occupations" ) label(2 "Routine Occupations") ///
label(3 "Cognitive Occupations")) ytitle("Change in Employment Share", size(small))  ///
title("Trade Induced Change in Employment Shares by Occupation in Indonesia", size(medsmall)) name(docc_shr_trade,replace) 

* compare with the total change computed by "Pattern9006_15Oct26.do"

keep year d*occ_shr_trade
merge 1:1 year using "data/temp/pattern_Nov22.dta"

drop _merge
foreach task in m r c{
ren d`task'occ_shr d`task'occ_shr0
ren d`task'occ_shr_trade d`task'occ_shr1
gen d`task'occ_shr3 = d`task'occ_shr0-d`task'occ_shr1 /* domestic */
}

reshape long dmocc_shr drocc_shr dcocc_shr, i(year) j(aggregate)

label define aggregatel 0 "overall" 1 "trade induced"  3 "residual" 
label value aggregate "aggregatel"
keep if year==2006

graph bar dmocc_shr drocc_shr dcocc_shr, over(aggregate,label(labsize(small))) legend (label(1 "Manual Occupations" ) label(2 "Routine Occupations") ///
label(3 "Cognitive Occupations")) ytitle("Change in Employment Share", size(small))  ///
title("Change in Employment Shares by Occupation in Indonesia (2002-2006)", size(medsmall)) name(docc_shr_all,replace) scheme(vg_s2c) graphregion(fcolor(white) lcolor(white))


graph bar dmocc_shr drocc_shr dcocc_shr, over(aggregate,label(labsize(small))) legend (label(1 "Manual Occupations" ) label(2 "Routine Occupations") ///
label(3 "Cognitive Occupations")) ytitle("Change in Employment Share", size(small))  ///
title("Change in Employment Shares by Occupation in Indonesia (2002-2006)", size(medsmall)) name(docc_shr_all,replace) scheme(vg_s2c) graphregion(fcolor(white) lcolor(white))

keep if aggregate==1
graph bar dmocc_shr drocc_shr dcocc_shr, legend (label(1 "Manual Occupations" ) label(2 "Routine Occupations") ///
label(3 "Cognitive Occupations")) ytitle("Change in Employment Share", size(small))  ///
title("Change in Employment Shares by Occupation in Indonesia (2002-2006)", size(medsmall)) name(docc_shr_trade,replace) scheme(vg_s2c) graphregion(fcolor(white) lcolor(white))

save "data/temp/tradeeffect_17Oct08.dta",replace

stop
********************************************************************************
* Tariff effects
********************************************************************************

use "data/temp/ctf_17Apr18.dta",clear /* generated by "counterfactual_17Apr18.do", import and export tariff separately */
*use "data/temp/ctf_17Apr18_v2.dta",clear /* generated by "counterfactual_17Apr18_v2.do", import and export tariff together */

drop if dlnY1==.
drop if dlnY2==.
drop if dlnY1_expctf==.
drop if dlnY2_expctf==.
drop if dlnY1_impctf==.
drop if dlnY2_impctf==.

* compute the prediction using fitted values

foreach Y in Y1 Y2{
gen lnL`Y' = ln(L`Y')
gen ln`Y'_expctf = lnL`Y'+dln`Y'_expctf
gen `Y'_expctf = exp(ln`Y'_expctf)
gen ln`Y'_impctf = lnL`Y'+dln`Y'_impctf
gen `Y'_impctf = exp(ln`Y'_impctf)
}

* L for "lagged"

gen mocc_shr = Y1/(Y1+Y2+Y1*Y2)
gen rocc_shr = (Y1*Y2)/(Y1+Y2+Y1*Y2)
gen cocc_shr = Y2/(Y1+Y2+Y1*Y2)

gen Lmocc_shr = LY1/(LY1+LY2+LY1*LY2)
gen Lrocc_shr = (LY1*LY2)/(LY1+LY2+LY1*LY2)
gen Lcocc_shr = LY2/(LY1+LY2+LY1*LY2)
 
foreach task in m r c{
gen d`task'occ_shr  = `task'occ_shr-L`task'occ_shr
}

* compute the docc_shr caused by tariff changes

gen mocc_shr_expctf = Y1_expctf/(Y1_expctf+Y2_expctf+Y1_expctf*Y2_expctf)
gen rocc_shr_expctf = (Y1_expctf*Y2_expctf)/(Y1_expctf+Y2_expctf+Y1_expctf*Y2_expctf)
gen cocc_shr_expctf = Y2_expctf/(Y1_expctf+Y2_expctf+Y1_expctf*Y2_expctf)

gen mocc_shr_impctf = Y1_impctf/(Y1_impctf+Y2_impctf+Y1_impctf*Y2_impctf)
gen rocc_shr_impctf = (Y1_impctf*Y2_impctf)/(Y1_impctf+Y2_impctf+Y1_impctf*Y2_impctf)
gen cocc_shr_impctf = Y2_impctf/(Y1_impctf+Y2_impctf+Y1_impctf*Y2_impctf)


foreach task in m r c{
gen d`task'occ_shr_expctf = `task'occ_shr_expctf-L`task'occ_shr
gen d`task'occ_shr_exptrf = d`task'occ_shr-d`task'occ_shr_expctf /* total - no tariff change */

gen d`task'occ_shr_impctf = `task'occ_shr_impctf-L`task'occ_shr
gen d`task'occ_shr_imptrf = d`task'occ_shr-d`task'occ_shr_impctf /* total - no tariff change */
}


collapse (mean) d*occ_shr d*occ_shr_*trf [aweight=L_kabgrp], by(year)



********************************************************
* Draw the bar graphs

* compare with the total change computed by "Pattern9006_15Oct26.do"
keep year d*occ_shr_*trf
merge 1:1 year using "data/temp/pattern_Nov22.dta"


foreach task in m r c{
ren d`task'occ_shr d`task'occ_shr0
ren d`task'occ_shr_exptrf d`task'occ_shr1
ren d`task'occ_shr_imptrf d`task'occ_shr2
*gen d`task'occ_shr3 = d`task'occ_shr0-d`task'occ_shr1 /* domestic */
}

reshape long dmocc_shr drocc_shr dcocc_shr, i(year) j(aggregate)
stop

label define aggregatel 0 "overall" 1 "ExpTrf change induced" 2 "ImpTrf change induced"
label value aggregate "aggregatel"
keep if year==2006

graph bar dmocc_shr drocc_shr dcocc_shr, over(aggregate,label(labsize(small))) legend (label(1 "Manual Occupations" ) label(2 "Routine Occupations") ///
label(3 "Cognitive Occupations")) ytitle("Change in Employment Share", size(small))  ///
title("Change in Employment Shares by Occupation in Indonesia (2002-2006)", size(medsmall)) name(docc_shr_all,replace) scheme(vg_s2c) graphregion(fcolor(white) lcolor(white))






